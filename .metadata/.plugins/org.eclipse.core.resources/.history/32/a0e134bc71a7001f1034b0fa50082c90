package br.com.fiap.resource;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import br.com.fiap.beans.Motorista;
import br.com.fiap.beans.Passageiro;
import br.com.fiap.beans.Usuario;
import br.com.fiap.conexao.ConexaoFactory;
import jakarta.ws.rs.POST;
import jakarta.ws.rs.Path;
import jakarta.ws.rs.Produces;
import jakarta.ws.rs.core.MediaType;
import jakarta.ws.rs.core.Response;

public class LoginResource {

    @POST
    @Path("/login")
    @Produces(MediaType.APPLICATION_JSON)
    @jakarta.ws.rs.Consumes(MediaType.APPLICATION_JSON)
    public Response login(Usuario usuario) throws ClassNotFoundException {
        String email = usuario.getEmail();

        // Define SQL para procurar o usuário em ambas as tabelas
        String sqlMotorista = "SELECT cpf_motorista AS cpf, nome, tipo_usuario FROM MOTORISTAS WHERE email = ?";
        String sqlPassageiro = "SELECT cpf_passageiro AS cpf, nome, tipo_usuario FROM PASSAGEIROS WHERE email = ?";

        try (Connection conn = new ConexaoFactory().conexao();
             PreparedStatement stmtMotorista = conn.prepareStatement(sqlMotorista);
             PreparedStatement stmtPassageiro = conn.prepareStatement(sqlPassageiro)) {

            // Verificar Motorista
            stmtMotorista.setString(1, email);
            ResultSet rsMotorista = stmtMotorista.executeQuery();

            if (rsMotorista.next()) {
                // Retorna dados do motorista
                return Response.ok(new Motorista(
                    rsMotorista.getString("cpf"),
                    rsMotorista.getString("nome"),
                    rsMotorista.getString("tipo_usuario")
                )).build();
            }

            // Verificar Passageiro
            stmtPassageiro.setString(1, email);
            ResultSet rsPassageiro = stmtPassageiro.executeQuery();

            if (rsPassageiro.next()) {
                // Retorna dados do passageiro
                return Response.ok(new Passageiro(
                    rsPassageiro.getString("cpf"),
                    rsPassageiro.getString("nome"),
                    rsPassageiro.getString("tipo_usuario")
                )).build();
            }

            // Caso as credenciais estejam erradas
            return Response.status(Response.Status.UNAUTHORIZED).entity("Falha na autenticação").build();

        } catch (SQLException e) {
            e.printStackTrace();
            return Response.status(Response.Status.INTERNAL_SERVER_ERROR).entity("Erro ao acessar o banco de dados").build();
        }
    }
}
