import java.io.BufferedReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;

import br.com.fiap.beans.Motorista;
import br.com.fiap.beans.Passageiro;
import br.com.fiap.conexao.ConexaoFactory;

public class LoginServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException {
        // Ler o corpo da requisição JSON
        BufferedReader reader = request.getReader();
        StringBuilder sb = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            sb.append(line);
        }
        
        // Converter o corpo JSON em um objeto
        JSONObject jsonObject = new JSONObject(sb.toString());
        String email = jsonObject.optString("email"); // Obtém o valor do email

        if (email == null || email.isEmpty()) {
            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
            response.getWriter().write("{\"error\":\"Email não fornecido\"}");
            return;
        }

        // Lógica do login
        try (Connection conn = new ConexaoFactory().conexao()) {
            String sqlMotorista = "SELECT cpf_motorista AS cpf, nome FROM MOTORISTAS WHERE email = ?";
            String sqlPassageiro = "SELECT cpf_passageiro AS cpf, nome FROM PASSAGEIROS WHERE email = ?";

            // Verificar se o usuário é um motorista
            try (PreparedStatement stmt = conn.prepareStatement(sqlMotorista)) {
                stmt.setString(1, email);
                ResultSet rs = stmt.executeQuery();

                if (rs.next()) {
                    Motorista motorista = new Motorista(
                        rs.getString("cpf"),
                        rs.getString("nome")
                    );

                    response.getWriter().write(
                        "{" +
                        "\"email\":\"" + email + "\"," +
                        "\"cpf\":\"" + motorista.getCpf() + "\"," +
                        "\"nome\":\"" + motorista.getNome() + 
                        "\"}"
                    );
                    return;
                }
            }

            // Verificar se o usuário é um passageiro
            try (PreparedStatement stmt = conn.prepareStatement(sqlPassageiro)) {
                stmt.setString(1, email);
                ResultSet rs = stmt.executeQuery();

                if (rs.next()) {
                    Passageiro passageiro = new Passageiro(
                        rs.getString("cpf"),
                        rs.getString("nome")
                    );

                    response.getWriter().write(
                        "{" +
                        "\"email\":\"" + email + "\"," +
                        "\"cpf\":\"" + passageiro.getCpf() + "\"," +
                        "\"nome\":\"" + passageiro.getNome() +
                        "\"}"
                    );
                    return;
                }
            }

            response.setStatus(HttpServletResponse.SC_OK); 
            response.getWriter().write("{\"error\":\"Email não encontrado\"}");

        } catch (SQLException e) {
            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            response.getWriter().write("{\"error\":\"Erro ao acessar o banco de dados\"}");
            e.printStackTrace();
        }
    }
}
