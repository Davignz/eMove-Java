package br.com.fiap.beans;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Usuario {
    private int idUsuario;
    private String email;
    private String senha;
    private char tipoUsuario; // 'M' ou 'P'
    private String idReferencia;
    
    
	public Usuario() {
		super();
	}
	
	
	public Usuario(int idUsuario, String email, String senha, char tipoUsuario, String idReferencia) {
		super();
		this.idUsuario = idUsuario;
		this.email = email;
		this.senha = senha;
		this.tipoUsuario = tipoUsuario;
		this.idReferencia = idReferencia;
	}


	public int getIdUsuario() {
		return idUsuario;
	}
	public void setIdUsuario(int idUsuario) {
		this.idUsuario = idUsuario;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getSenha() {
		return senha;
	}
	public void setSenha(String senha) {
		this.senha = senha;
	}
	public char getTipoUsuario() {
		return tipoUsuario;
	}
	public void setTipoUsuario(char tipoUsuario) {
		this.tipoUsuario = tipoUsuario;
	}
	public String getIdReferencia() {
		return idReferencia;
	}
	public void setIdReferencia(String idReferencia) {
		this.idReferencia = idReferencia;
	} 
	
	private String hashSenha(String senha) {
	    try {
	        // Obtém uma instância do algoritmo SHA-256
	        MessageDigest digest = MessageDigest.getInstance("SHA-256");
	        
	        // Converte a senha em bytes e calcula o hash
	        byte[] hashBytes = digest.digest(senha.getBytes());
	        
	        // Converte os bytes do hash para um formato hexadecimal legível
	        StringBuilder hashHex = new StringBuilder();
	        for (byte b : hashBytes) {
	            hashHex.append(String.format("%02x", b));
	        }
	        
	        return hashHex.toString();
	    } catch (NoSuchAlgorithmException e) {
	        throw new RuntimeException("Erro ao hashear a senha", e);
	    }
	}
}

    
