package br.fiap.com.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import br.com.fiap.beans.Passageiro;
import br.com.fiap.conexao.ConexaoFactory;

public class PassageiroDAO {
	
    private Connection connection;

    public PassageiroDAO(Connection connection) {
        this.connection = connection;
    }
    
    public PassageiroDAO() {
        try {
            
            this.connection = new ConexaoFactory().conexao();
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Erro ao obter conex√£o: " + e.getMessage());
        }
    }
    
 // Inserir passageiro
    public void inserir(Passageiro passageiro) throws SQLException {
        String sql = "INSERT INTO PASSAGEIROS (cpf_passageiro, nome, email, telefone, cep, saldo, total_carbono_usuario) VALUES (?, ?, ?, ?, ?, ?, ?)";
        try (PreparedStatement stmt = connection.prepareStatement(sql)) {
            stmt.setString(1, passageiro.getCpfPassageiro());
            stmt.setString(2, passageiro.getNome());
            stmt.setString(3, passageiro.getEmail());
            stmt.setString(4, passageiro.getTelefone());
            stmt.setString(5, passageiro.getCep());
            stmt.setDouble(6, passageiro.getSaldo());
            stmt.setDouble(7, passageiro.getTotalCarbonoUsuario());
            stmt.executeUpdate();
        }
    }

    // Buscar passageiro por CPF
    public Passageiro buscarPorCPF(String cpf) throws SQLException {
        String sql = "SELECT * FROM PASSAGEIROS WHERE cpf_passageiro = ?";
        try (PreparedStatement stmt = connection.prepareStatement(sql)) {
            stmt.setString(1, cpf);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    return mapResultSetToPassageiro(rs);
                }
            }
        }
        return null;
    }

    // Atualizar passageiro
    public void atualizar(Passageiro passageiro) throws SQLException {
        String sql = "UPDATE PASSAGEIROS SET nome = ?, email = ?, telefone = ?, cep = ?, saldo = ?, total_carbono_usuario = ? WHERE cpf_passageiro = ?";
        try (PreparedStatement stmt = connection.prepareStatement(sql)) {
            stmt.setString(1, passageiro.getNome());
            stmt.setString(2, passageiro.getEmail());
            stmt.setString(3, passageiro.getTelefone());
            stmt.setString(4, passageiro.getCep());
            stmt.setFloat(5, passageiro.getSaldo());
            stmt.setFloat(6, passageiro.getTotalCarbonoUsuario());
            stmt.setString(7, passageiro.getCpfPassageiro());
            stmt.executeUpdate();
        }
    }

    // Deletar passageiro por CPF
    public void deletar(String cpf) throws SQLException {
        String sql = "DELETE FROM PASSAGEIROS WHERE cpf_passageiro = ?";
        try (PreparedStatement stmt = connection.prepareStatement(sql)) {
            stmt.setString(1, cpf);
            stmt.executeUpdate();
        }
    }
}
