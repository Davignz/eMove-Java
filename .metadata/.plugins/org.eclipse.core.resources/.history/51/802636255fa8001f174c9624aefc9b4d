package br.com.fiap.resource;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import br.com.fiap.beans.Motorista;
import br.com.fiap.beans.Passageiro;
import br.com.fiap.conexao.ConexaoFactory;

@Path("/login")
public class LoginResource {

	@POST
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Response login(String email) throws ClassNotFoundException {
	    if (email == null || email.trim().isEmpty()) {
	        System.out.println("E-mail recebido é nulo ou vazio.");
	        return Response.status(Response.Status.BAD_REQUEST).entity("E-mail inválido ou vazio").build();
	    }

	    System.out.println("E-mail recebido: " + email);

	    String sqlMotorista = "SELECT cpf_motorista, nome FROM MOTORISTAS WHERE email = ?";
	    String sqlPassageiro = "SELECT cpf_passageiro, nome FROM PASSAGEIROS WHERE email = ?";

	    try (Connection conn = new ConexaoFactory().conexao()) {
	        // Log para verificar conexão
	        System.out.println("Conexão com o banco estabelecida.");

	        // Verificar Motorista
	        try (PreparedStatement stmtMotorista = conn.prepareStatement(sqlMotorista)) {
	            stmtMotorista.setString(1, email);
	            System.out.println("Executando query para Motorista: " + stmtMotorista);

	            try (ResultSet rsMotorista = stmtMotorista.executeQuery()) {
	                if (rsMotorista.next()) {
	                    System.out.println("Motorista encontrado no banco.");
	                    Motorista motorista = new Motorista(
	                        rsMotorista.getString("cpf_motorista"),
	                        rsMotorista.getString("nome")
	                    );
	                    return Response.ok(motorista).build();
	                }
	            }
	        }

	        // Verificar Passageiro
	        try (PreparedStatement stmtPassageiro = conn.prepareStatement(sqlPassageiro)) {
	        	stmtPassageiro.setString(1, email.trim());
	        	System.out.println("Query final para Passageiro: " + stmtPassageiro);

	            try (ResultSet rsPassageiro = stmtPassageiro.executeQuery()) {
	                if (rsPassageiro.next()) {
	                    System.out.println("Passageiro encontrado no banco.");
	                    Passageiro passageiro = new Passageiro(
	                        rsPassageiro.getString("cpf_passageiro"),
	                        rsPassageiro.getString("nome")
	                    );
	                    return Response.ok(passageiro).build();
	                }
	            }
	        }

	        System.out.println("Email não encontrado em Motoristas nem Passageiros.");
	        return Response.status(Response.Status.UNAUTHORIZED).entity("Email não encontrado").build();

	    } catch (SQLException e) {
	        e.printStackTrace();
	        return Response.status(Response.Status.INTERNAL_SERVER_ERROR).entity("Erro ao acessar o banco de dados").build();
	    }
	}
}
