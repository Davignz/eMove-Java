package br.com.fiap.resource;

import java.sql.SQLException;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import br.com.fiap.beans.CadastroMotoristaRequest;
import br.com.fiap.beans.Motorista;
import br.com.fiap.beans.Veiculo;
import br.com.fiap.bo.MotoristaBO;
import br.com.fiap.bo.VeiculoBO;

@Path("/motorista")
public class MotoristaResource {

    private MotoristaBO motoristaBO = new MotoristaBO();
    private VeiculoBO veiculoBO = new VeiculoBO();

    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response cadastrarMotoristaECarro(CadastroMotoristaRequest request) {
        Motorista motorista = request.getMotorista();
        Veiculo veiculo = request.getVeiculo();

        // Verificar se o CPF do motorista é válido
        if (motorista.getCpf() == null || motorista.getCpf().trim().length() != 11) {
            return Response.status(Response.Status.BAD_REQUEST)
                    .entity("Erro: CPF inválido!")
                    .build();
        }

        try {
            // 1. Inserir o motorista no banco de dados
            motoristaBO.inserirMotorista(motorista);

            // 2. Associar o motorista ao veículo e inserir o veículo no banco
            veiculo.setCpfMotorista(motorista.getCpf());  // Associar o CPF do motorista ao veículo
            veiculoBO.inserir(veiculo);

            return Response.status(Response.Status.CREATED)
                    .entity("Motorista e veículo cadastrados com sucesso!")
                    .build();
        } catch (SQLException e) {
            e.printStackTrace();
            return Response.status(Response.Status.INTERNAL_SERVER_ERROR)
                    .entity("Erro ao cadastrar motorista e veículo.")
                    .build();
        }
    }
}
